{
    "data" : [
        "",
        "+ ",
        "    # Calculate proportion of promiscuous probes removed from feature data",
        "+ ",
        "    prop <- round(sum(probes_in) / length(unique(fdata[,probe_col])) * 100, digits = 2)",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    ",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(prop, \"% of probes mapping to different \", ref_col, \" were removed. Also, \", dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "",
        "+ ",
        "  } else {",
        "+ ",
        "",
        "+ ",
        "    # Filter fdata containing not-duplicated values",
        "+ ",
        "    dup <- sum(duplicated(fdata[,probe_col]))",
        "+ ",
        "    fdata <- fdata %>%",
        "+ ",
        "      dplyr::filter(!duplicated((!!id1)))",
        "+ ",
        "    ",
        "+ ",
        "    # Set probes as rownames",
        "+ ",
        "    rownames(fdata) <- fdata[,probe_col]",
        "+ ",
        "    fdata[,probe_col] <- NULL",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "# Set annotation in to eset and remove promiscuous probes and dual notations",
        "> ",
        "eset <- set_fdata(eset, feature_data,",
        "+ ",
        "                  probe_col = platform,",
        "+ ",
        "                  ref_col = ref_col,",
        "+ ",
        "                  rm_probes = TRUE)",
        "Error in `[.data.frame`(fdata, , probe_col) : undefined columns selected\n",
        "> ",
        "print(\"oi\")",
        "[1] \"oi\"\n",
        "> ",
        "#' @param eset ExpressionSet object. Usually the result of normalization process",
        "> ",
        "#' @param fdata Feature data (dataframe) containing at least two columns: probe id and other id (gene symbol, for instance).",
        "> ",
        "#' @param probe_col Column name for probes in",
        "> ",
        "#' @param rm_probes Logical. Whether toremove promiscuous probes form feature data dataframe.",
        "> ",
        "#' @param ref_col Column name of feature data with the reference id to look for promiscuous probes.",
        "> ",
        "#'",
        "> ",
        "#' @return ExpressionSet object with filtered assayData slot.",
        "> ",
        "#' @export",
        "> ",
        "#'",
        "> ",
        "#' @examples",
        "> ",
        "set_fdata <- function(eset, fdata, probe_col, rm_probes = FALSE, ref_col = \"hgnc_symbol\") {",
        "+ ",
        "",
        "+ ",
        "  fdata <- unique(na.omit(fdata))",
        "+ ",
        "  id1 <- dplyr::sym(probe_col)",
        "+ ",
        "  id2 <- dplyr::sym(ref_col)",
        "+ ",
        "",
        "+ ",
        "  if(rm_probes) {",
        "+ ",
        "    if(is.null(ref_col)) {",
        "+ ",
        "      stop(\"Provide a reference column in order to remove probes that map to more than one id.\")",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    # Remove promiscuous probes",
        "+ ",
        "    rem_probes <- fdata %>%",
        "+ ",
        "      dplyr::group_by((!!id1)) %>%",
        "+ ",
        "      dplyr::summarise(c = dplyr::n_distinct((!!id2))) %>%",
        "+ ",
        "      dplyr::ungroup() %>% ",
        "+ ",
        "      dplyr::filter(c > 1) %>%",
        "+ ",
        "      dplyr::select((!!id1)) %>%",
        "+ ",
        "      unlist(use.names = F)",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "    # Subset fdata by probes that are not promiscuous",
        "+ ",
        "    probes_in <- fdata[,probe_col] %in% rem_probes",
        "+ ",
        "    fdata <- fdata[!probes_in,]",
        "+ ",
        "",
        "+ ",
        "    # Filter fdata containing not-duplicated values",
        "+ ",
        "    dup <- sum(duplicated(fdata[,probe_col]))",
        "+ ",
        "    fdata <- fdata %>%",
        "+ ",
        "      dplyr::filter(!duplicated((!!id1)))",
        "+ ",
        "    ",
        "+ ",
        "    # Set probes as rownames",
        "+ ",
        "    rownames(fdata) <- fdata[,probe_col]",
        "+ ",
        "    fdata <- fdata[, !(colnames(fdata) %in% probe_col)]",
        "+ ",
        "    ",
        "+ ",
        "    print(\"oi\")",
        "+ ",
        "",
        "+ ",
        "    # Calculate proportion of promiscuous probes removed from feature data",
        "+ ",
        "    prop <- round(sum(probes_in) / length(unique(fdata[,probe_col])) * 100, digits = 2)",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    ",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(prop, \"% of probes mapping to different \", ref_col, \" were removed. Also, \", dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "",
        "+ ",
        "  } else {",
        "+ ",
        "",
        "+ ",
        "    # Filter fdata containing not-duplicated values",
        "+ ",
        "    dup <- sum(duplicated(fdata[,probe_col]))",
        "+ ",
        "    fdata <- fdata %>%",
        "+ ",
        "      dplyr::filter(!duplicated((!!id1)))",
        "+ ",
        "    ",
        "+ ",
        "    # Set probes as rownames",
        "+ ",
        "    rownames(fdata) <- fdata[,probe_col]",
        "+ ",
        "    fdata[,probe_col] <- NULL",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "# Set annotation in to eset and remove promiscuous probes and dual notations",
        "> ",
        "eset <- set_fdata(eset, feature_data,",
        "+ ",
        "                  probe_col = platform,",
        "+ ",
        "                  ref_col = ref_col,",
        "+ ",
        "                  rm_probes = TRUE)",
        "[1] \"oi\"\n",
        "Error in `[.data.frame`(fdata, , probe_col) : undefined columns selected\n",
        "> ",
        "#' @param eset ExpressionSet object. Usually the result of normalization process",
        "> ",
        "#' @param fdata Feature data (dataframe) containing at least two columns: probe id and other id (gene symbol, for instance).",
        "> ",
        "#' @param probe_col Column name for probes in",
        "> ",
        "#' @param rm_probes Logical. Whether toremove promiscuous probes form feature data dataframe.",
        "> ",
        "#' @param ref_col Column name of feature data with the reference id to look for promiscuous probes.",
        "> ",
        "#'",
        "> ",
        "#' @return ExpressionSet object with filtered assayData slot.",
        "> ",
        "#' @export",
        "> ",
        "#'",
        "> ",
        "#' @examples",
        "> ",
        "set_fdata <- function(eset, fdata, probe_col, rm_probes = FALSE, ref_col = \"hgnc_symbol\") {",
        "+ ",
        "",
        "+ ",
        "  fdata <- unique(na.omit(fdata))",
        "+ ",
        "  id1 <- dplyr::sym(probe_col)",
        "+ ",
        "  id2 <- dplyr::sym(ref_col)",
        "+ ",
        "",
        "+ ",
        "  if(rm_probes) {",
        "+ ",
        "    if(is.null(ref_col)) {",
        "+ ",
        "      stop(\"Provide a reference column in order to remove probes that map to more than one id.\")",
        "+ ",
        "    }",
        "+ ",
        "",
        "+ ",
        "    # Remove promiscuous probes",
        "+ ",
        "    rem_probes <- fdata %>%",
        "+ ",
        "      dplyr::group_by((!!id1)) %>%",
        "+ ",
        "      dplyr::summarise(c = dplyr::n_distinct((!!id2))) %>%",
        "+ ",
        "      dplyr::ungroup() %>% ",
        "+ ",
        "      dplyr::filter(c > 1) %>%",
        "+ ",
        "      dplyr::select((!!id1)) %>%",
        "+ ",
        "      unlist(use.names = F)",
        "+ ",
        "",
        "+ ",
        "",
        "+ ",
        "    # Subset fdata by probes that are not promiscuous",
        "+ ",
        "    probes_in <- fdata[,probe_col] %in% rem_probes",
        "+ ",
        "    fdata <- fdata[!probes_in,]",
        "+ ",
        "",
        "+ ",
        "    # Filter fdata containing not-duplicated values",
        "+ ",
        "    dup <- sum(duplicated(fdata[,probe_col]))",
        "+ ",
        "    fdata <- fdata %>%",
        "+ ",
        "      dplyr::filter(!duplicated((!!id1)))",
        "+ ",
        "    ",
        "+ ",
        "    # Set probes as rownames",
        "+ ",
        "    rownames(fdata) <- fdata[,probe_col]",
        "+ ",
        "    fdata <- fdata[, !(colnames(fdata) %in% probe_col)]",
        "+ ",
        "",
        "+ ",
        "    # Calculate proportion of promiscuous probes removed from feature data",
        "+ ",
        "    prop <- round(sum(probes_in) / length(unique(rownames(fdata))) * 100, digits = 2)",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    ",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(prop, \"% of probes mapping to different \", ref_col, \" were removed. Also, \", dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "",
        "+ ",
        "  } else {",
        "+ ",
        "",
        "+ ",
        "    # Filter fdata containing not-duplicated values",
        "+ ",
        "    dup <- sum(duplicated(fdata[,probe_col]))",
        "+ ",
        "    fdata <- fdata %>%",
        "+ ",
        "      dplyr::filter(!duplicated((!!id1)))",
        "+ ",
        "    ",
        "+ ",
        "    # Set probes as rownames",
        "+ ",
        "    rownames(fdata) <- fdata[,probe_col]",
        "+ ",
        "    fdata <- fdata[, !(colnames(fdata) %in% probe_col)]",
        "+ ",
        "",
        "+ ",
        "    # Filter assayData by feature data and assign fData",
        "+ ",
        "    eset <- eset[rownames(eset) %in% rownames(fdata), ]",
        "+ ",
        "    eset <- eset[base::match(rownames(fdata), rownames(eset)), ]",
        "+ ",
        "    Biobase::fData(eset) <- fdata",
        "+ ",
        "    message(dup, \" duplicated probes in feature data were removed.\")",
        "+ ",
        "    return(eset)",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "# Set annotation in to eset and remove promiscuous probes and dual notations",
        "> ",
        "eset <- set_fdata(eset, feature_data,",
        "+ ",
        "                  probe_col = platform,",
        "+ ",
        "                  ref_col = ref_col,",
        "+ ",
        "                  rm_probes = TRUE)",
        "9.8% of probes mapping to different hgnc_symbol were removed. Also, 251 duplicated probes in feature data were removed.\n",
        "> ",
        "head(exprs(eset))",
        "            GSM565176.CEL.gz GSM565177.CEL.gz GSM565178.CEL.gz GSM565179.CEL.gz GSM565180.CEL.gz\n211600_at          13.100904        12.664155        12.648919        12.619382        13.097308\n1553575_at          8.643278         9.330582         9.112508         9.404053         8.922889\n241741_at           6.497533         6.137975         6.745516         6.382475         6.242426\n225324_at           8.784828         9.090281         9.227014         8.789058         8.680645\n223978_s_at        10.047900",
        "         9.960238         9.947019         9.861467         9.590539\n208939_at          10.085871         9.998973         9.885832         9.843056         9.549286\n            GSM565181.CEL.gz GSM565182.CEL.gz GSM565183.CEL.gz GSM565184.CEL.gz GSM565185.CEL.gz\n211600_at          12.679086        12.535473        12.354968        12.301256        12.061697\n1553575_at          8.474335         9.527466        10.009564        10.220669        10.402095\n241741_at           6.522668         6.930003         6.877732",
        "         6.877384         6.839122\n225324_at           8.467103         8.953955         9.270949         8.941898         8.903683\n223978_s_at         9.378418         9.907142         9.844970         9.874992         9.748089\n208939_at           9.641728        10.084426         9.951680         9.769662         9.765532\n            GSM565186.CEL.gz GSM565187.CEL.gz GSM565188.CEL.gz GSM565189.CEL.gz GSM565190.CEL.gz\n211600_at          12.485699        12.551751        12.108914        12.036006        12.505706",
        "\n1553575_at         10.090773         9.946016        10.689902        10.500465        10.147351\n241741_at           6.339100         6.891057         7.159806         7.229837         7.128643\n225324_at           8.647217         8.606288         9.010037         9.127164         8.958050\n223978_s_at         9.409384         9.249987         9.831697         9.915410         9.870683\n208939_at           9.529553         9.562754         9.966138         9.899980         9.675388\n            GSM565191.CEL.gz",
        " GSM565192.CEL.gz GSM565193.CEL.gz\n211600_at          12.299149        12.536307        12.488211\n1553575_at         10.126983        10.027470        10.197803\n241741_at           6.963142         6.873611         6.801535\n225324_at           9.031809         8.678498         8.685732\n223978_s_at         9.758074         9.354027         9.358486\n208939_at           9.657009         9.675981         9.566158\n",
        "> ",
        "head(rownames(exprs(eset)))",
        "[1] \"211600_at\"   \"1553575_at\"  \"241741_at\"   \"225324_at\"   \"223978_s_at\" \"208939_at\"  \n",
        "> ",
        "head(rownames(fData(eset)))",
        "[1] \"211600_at\"   \"1553575_at\"  \"241741_at\"   \"225324_at\"   \"223978_s_at\" \"208939_at\"  \n",
        "> ",
        "# Import and normalize",
        "> ",
        "eset <- import_norm(celfiles_path = celfiles_path, pheno_data = pheno_data, sep = sep)",
        "Background correcting\nNormalizing\nCalculating Expression\n",
        "> ",
        "View(exprs(eset))",
        "> ",
        "exprs(eset)[\"211600_at\",]",
        "GSM565176.CEL.gz GSM565177.CEL.gz GSM565178.CEL.gz GSM565179.CEL.gz GSM565180.CEL.gz GSM565181.CEL.gz \n        13.10090         12.66416         12.64892         12.61938         13.09731         12.67909 \nGSM565182.CEL.gz GSM565183.CEL.gz GSM565184.CEL.gz GSM565185.CEL.gz GSM565186.CEL.gz GSM565187.CEL.gz \n        12.53547         12.35497         12.30126         12.06170         12.48570         12.55175 \nGSM565188.CEL.gz GSM565189.CEL.gz GSM565190.CEL.gz GSM565191.CEL.gz GSM565192.CEL.gz GSM565193.CEL.gz ",
        "\n        12.10891         12.03601         12.50571         12.29915         12.53631         12.48821 \n",
        "> ",
        "# Set annotation in to eset and remove promiscuous probes and dual notations",
        "> ",
        "eset <- set_fdata(eset, feature_data,",
        "+ ",
        "                  probe_col = platform,",
        "+ ",
        "                  ref_col = ref_col,",
        "+ ",
        "                  rm_probes = TRUE)",
        "9.8% of probes mapping to different hgnc_symbol were removed. Also, 251 duplicated probes in feature data were removed.\n",
        "> ",
        "limma::topTable(ct.fit, adjust.method = \"BH\", p.value = 0.05)",
        "            affy_hg_u133_plus_2 hgnc_symbol entrezgene    logFC  AveExpr        t      P.Value    adj.P.Val\n210033_s_at         210033_s_at       SPAG6       9576 3.623039 4.444633 22.47825 2.462451e-13 9.019464e-09\n202291_s_at         202291_s_at         MGP       4256 3.453870 4.312910 21.41502 5.139698e-13 9.412844e-09\n227478_at             227478_at      SETBP1      26040 3.854807 4.137247 19.22144 2.630575e-12 3.211757e-08\n209505_at             209505_at       NR2F1       7025 3.394616 4.873000 17.16132",
        " 1.437578e-11 1.280420e-07\n204915_s_at         204915_s_at       SOX11       6664 2.445495 4.974869 16.85306 1.883075e-11 1.280420e-07\n219501_at             219501_at       ENOX1      55068 1.424015 5.579876 16.73135 2.097445e-11 1.280420e-07\n236029_at             236029_at        FAT3     120114 1.340785 3.919679 16.53198 2.506414e-11 1.311499e-07\n222895_s_at         222895_s_at      BCL11B      64919 3.440087 4.152608 16.38366 2.865191e-11 1.311828e-07\n214051_at             214051_at     TMSB15B     286527",
        " 2.258135 5.302928 16.03498 3.941079e-11 1.603931e-07\n1563754_at           1563754_at       GRIK2       2898 1.558564 3.610746 15.50844 6.454713e-11 2.364232e-07\n                   B\n210033_s_at 19.49451\n202291_s_at 18.94382\n227478_at   17.66972\n209505_at   16.27453\n204915_s_at 16.04674\n219501_at   15.95533\n236029_at   15.80375\n222895_s_at 15.68948\n214051_at   15.41567\n1563754_at  14.98794\n",
        "> ",
        "temp <- as.factor(pData(eset)[,group])",
        "> ",
        "design <- model.matrix(~0 + temp)",
        "> ",
        "cols <- colnames(design)",
        "> ",
        "colnames(design) <- gsub(\"temp\", \"\", cols)",
        "> ",
        "a <- c(s8xs0 = \"shOTX2_8-shOTX2_0\", s16xs8 = \"shOTX2_16-shOTX2_8\", s24xs16 = \"shOTX2_24-shOTX2_16\",",
        "+ ",
        "          s48xs24 = \"shOTX2_48-shOTX2_24\", s96xs48 = \"shOTX2_96-shOTX2_48\")",
        "> ",
        "fit <- limma::lmFit(eset, design)",
        "> ",
        "contrasts <- limma::makeContrasts(a, levels = design)",
        "> ",
        "ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "> ",
        "res.fit <- limma::decideTests(ct.fit, method = \"separate\", adjust.method = \"BH\", p.value = 0.05)",
        "> ",
        "limma::topTable(ct.fit, adjust.method = \"BH\", p.value = 0.05)",
        "            hgnc_symbol entrezgene    logFC  AveExpr        t      P.Value    adj.P.Val        B\n210033_s_at       SPAG6       9576 3.623039 4.444633 22.47825 2.462451e-13 9.019464e-09 19.49451\n202291_s_at         MGP       4256 3.453870 4.312910 21.41502 5.139698e-13 9.412844e-09 18.94382\n227478_at        SETBP1      26040 3.854807 4.137247 19.22144 2.630575e-12 3.211757e-08 17.66972\n209505_at         NR2F1       7025 3.394616 4.873000 17.16132 1.437578e-11 1.280420e-07 16.27453\n204915_s_at       SOX11       6664",
        " 2.445495 4.974869 16.85306 1.883075e-11 1.280420e-07 16.04674\n219501_at         ENOX1      55068 1.424015 5.579876 16.73135 2.097445e-11 1.280420e-07 15.95533\n236029_at          FAT3     120114 1.340785 3.919679 16.53198 2.506414e-11 1.311499e-07 15.80375\n222895_s_at      BCL11B      64919 3.440087 4.152608 16.38366 2.865191e-11 1.311828e-07 15.68948\n214051_at       TMSB15B     286527 2.258135 5.302928 16.03498 3.941079e-11 1.603931e-07 15.41567\n1563754_at        GRIK2       2898 1.558564 3.610746 15.50844",
        " 6.454713e-11 2.364232e-07 14.98794\n",
        "> ",
        "View(feature_data)",
        "> ",
        "devtools::document()",
        "Updating MicroarrayMethods documentation\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/create_report.R#24]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/get_annotation.R#18]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/import_celfiles.R#17]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/import_norm.R#15]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_all_attributes.R#11]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_celfiles.R#9]: requires a value\n",
        "Warning:",
        " @return [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_datasets.R#6]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_datasets.R#9]: requires a value\n",
        "Warning:",
        " @return [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_platforms.R#10]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/list_platforms.R#13]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/pca_prop.R#11]: requires a value\n",
        "Warning:",
        " @return [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/plot_dendrogram.R#10]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/plot_dendrogram.R#13]: requires a value\n",
        "Warning:",
        " @return [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/plot_hk.R#9]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/plot_hk.R#12]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/plot_pca.R#15]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/remove_probes.R#13]: requires a value\n",
        "Warning:",
        " @examples [/home/iaradsouza/Dropbox/Curso/MicroarrayMethods/R/set_fdata.R#16]: requires a value\n",
        "Writing NAMESPACE\n",
        "Loading MicroarrayMethods\n",
        "Writing NAMESPACE\nWriting set_fdata.Rd\n",
        "> ",
        "SH.limma <- data.frame( entrez= ct.fit$genes$entrez, symbol = ct.fit$genes$symbol,",
        "+ ",
        "                        logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                        degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "Error in data.frame(entrez = ct.fit$genes$entrez, symbol = ct.fit$genes$symbol,  : \n  arguments imply differing number of rows: 36628, 0\n",
        "> ",
        "SH.limma <- data.frame( entrez= ct.fit$genes$entrezgene, symbol = ct.fit$genes$hgnc_symbol,",
        "+ ",
        "                        logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                        degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "> ",
        "View(SH.limma)",
        "> ",
        "res.fit <- limma::decideTests(ct.fit, method = \"separate\", adjust.method = \"BH\", p.value = 0.05)",
        "> ",
        "unclass(res.fit)",
        "                             Contrasts\n                              shOTX2_8-shOTX2_0\n  211600_at                                   0\n  1553575_at                                  0\n  241741_at                                   0\n  225324_at                                   0\n  223978_s_at                                 0\n  208939_at                                   0\n  208940_at                                   0\n  208941_s_at                                 0\n  207601_at                                   0",
        "\n  237806_s_at                                 0\n  1562051_at                                  0\n  210152_at                                   0\n  212589_at                                   0\n  212590_at                                   0\n  208456_s_at                                 0\n  219689_at                                  -1\n  205972_at                                   0\n  209752_at                                   0\n  210642_at                                   0\n  208040_s_at                                 0",
        "\n  228575_at                                   0\n  225329_at                                   0\n  203499_at                                   0\n  227111_at                                   1\n  204022_at                                   0\n  1552737_s_at                                0\n  210200_at                                   0\n  243787_at                                   0\n  220480_at                                   0\n  1553743_at                                  0\n  235177_at                                   0",
        "\n  235931_at                                   0\n  1562844_at                                  0\n  205811_at                                   0\n  1564539_at                                  0\n  203758_at                                   0\n  212502_at                                   0\n  212500_at                                   0\n  1556619_at                                  0\n  229978_at                                   0\n  242543_at                                   0\n  217681_at                                   0",
        "\n  238105_x_at                                 0\n  208493_at                                   0\n  213823_at                                   0\n  1557004_at                                  0\n  237200_at                                   0\n  207649_at                                   0\n  212020_s_at                                -1\n  212022_s_at                                -1\n  212021_s_at                                -1\n  212023_s_at                                -1\n  215498_s_at                                 0",
        "\n  215499_at                                   0\n  207667_s_at                                 0\n  203665_at                                   0\n  220765_s_at                                 0\n  212875_s_at                                -1\n  209740_s_at                                 0\n  209739_s_at                                -1\n  209407_s_at                                 0\n  203261_at                                   0\n  230666_at                                   0\n  239950_at                                   0",
        "\n  1552761_at                                  0\n  218544_s_at                                 0\n  222666_s_at                                 1\n  233981_at                                   1\n  206677_at                                   0\n  202150_s_at                                 0\n  202149_at                                  -1\n  242861_at                                   0\n  1569020_at                                  0\n  1560706_at                                  0\n  231625_at                                   0",
        "\n  200824_at                                   0\n  219577_s_at                                 0\n  1555404_a_at                                0\n  1554648_a_at                                0\n  207260_at                                   0\n  239708_at                                   0\n  219791_s_at                                 0\n  236141_at                                   0\n  240167_at                                   0\n  221457_s_at                                 0\n  203765_at                                   1",
        "\n  203482_at                                   0\n  203481_at                                   0\n  1553909_x_at                                0\n  235590_at                                   0\n  211259_s_at                                 0\n  209591_s_at                                 0\n  209590_at                                   0\n  211260_at                                   0\n  201486_at                                   0\n  201485_s_at                                 0\n  212132_at                                   0",
        "\n  212131_at                                   0\n  222099_s_at                                 0\n  226287_at                                  -1\n  1553666_at                                  0\n  211063_s_at                                 0\n  219756_s_at                                 0\n  1555383_a_at                                0\n  1555382_at                                  0\n  232121_at                                   0\n  206308_at                                   0\n  243504_at                                   0",
        "\n  214495_at                                   0\n  200041_s_at                                 0\n  214859_at                                   0\n  1564511_a_at                                0\n  236853_at                                   0\n  233335_at                                   0\n  222899_at                                   0\n  1554819_a_at                                0\n  238983_at                                   0\n  220194_at                                   0\n  1554452_a_at                                0",
        "\n  218507_at                                   0\n  202594_at                                   1\n  202595_s_at                                 0\n  209026_x_at                                 0\n  212320_at                                   0\n  211714_x_at                                 0\n  201529_s_at                                 0\n  236675_at                                   0\n  201528_at                                   0\n  231812_x_at                                 0\n  235767_x_at                                 0",
        "\n  234405_s_at                                 0\n  244297_at                                   0\n  208059_at                                   0\n  218121_at                                   0\n  218120_s_at                                 0\n  222276_at                                   0\n  229499_at                                   0\n  1552801_at                                  0\n  221600_s_at                                -1\n  221599_at                                   0\n  241066_at                                   0",
        "\n  228968_at                                   0\n  226474_at                                   0\n  212664_at                                   0\n  1561271_at                                  0\n  216045_at                                   0\n  202307_s_at                                 0\n  205644_s_at                                 0\n  206969_at                                   0\n  226817_at                                   0\n  231033_at                                   0\n  204750_s_at                                 0",
        "\n  204751_x_at                                 0\n  206509_at                                   0\n  214513_s_at                                 1\n  204312_x_at                                 1\n  204313_s_at                                 1\n  225565_at                                   0\n  225572_at                                   1\n  237289_at                                   0\n  204314_s_at                                 1\n  208881_x_at                                 0\n  204615_x_at                                 0",
        "\n  238697_at                                   0\n  224927_at                                   0\n  211141_s_at                                 0\n  203239_s_at                                 0\n  229143_at                                   0\n  227485_at                                   1\n  1562634_at                                  0\n  207862_at                                   0\n  204856_at                                   0\n  204715_at                                   0\n  237428_at                                   0",
        "\n  208894_at                                   0\n  210982_s_at                                 0\n  1553553_at                                  0\n  228065_at                                   0\n  227616_at                                   0\n  229175_at                                   1\n  210687_at                                   0\n  210688_s_at                                 0\n  203634_s_at                                -1\n  203633_at                                   0\n  1552793_at                                  0",
        "\n  227721_at                                   0\n  224099_at                                   0\n  1555316_a_at                                0\n  214110_s_at                                 0\n  243367_at                                   0\n  228158_at                                   0\n  242133_s_at                                 0\n  1552491_at                                  0\n  204360_s_at                                 0\n  211091_s_at                                 0\n  211092_s_at                                 0",
        "\n  204991_s_at                                 0\n  211017_s_at                                 0\n  238618_at                                   0\n  218915_at                                   0\n  210767_at                                   0\n  217150_s_at                                 0\n  203414_at                                   0\n  244523_at                                   0\n  224678_at                                   0\n  221736_at                                   0\n  221738_at                                   0",
        "\n  242233_at                                   0\n  1561290_at                                  0\n  208717_at                                   0\n  235588_at                                   0\n  235178_x_at                                 0\n  1564473_at                                  0\n  241252_at                                   0\n  1557342_a_at                                0\n  238150_at                                   0\n  232480_at                                   0\n  218238_at                                   0",
        "\n  228002_at                                   0\n  217631_at                                   0\n  218239_s_at                                 0\n  240420_at                                   0\n  232018_at                                   0\n  206126_at                                   0\n  216734_s_at                                 0\n  201364_s_at                                 0\n  201365_at                                   0\n  201349_at                                   0\n  1553882_at                                  0",
        "\n  204537_s_at                                 0\n  207787_at                                   0\n  225169_at                                   0\n  1553670_at                                  0\n  233193_x_at                                 0\n  1569253_at                                  0\n  1569254_s_at                                0\n  205829_at                                   0\n  202060_at                                   0\n  209040_s_at                                 0\n  203175_at                                   0",
        "\n  213039_at                                   0\n  239270_at                                  -1\n  230081_at                                  -1\n  209088_s_at                                 0\n  207253_s_at                                 0\n  235608_at                                   0\n  225132_at                                   0\n  208291_s_at                                 0\n  208483_x_at                                 0\n  210907_s_at                                 0\n  235396_at                                   0",
        "\n  208820_at                                   0\n  207821_s_at                                 0\n  241387_at                                   0\n  241453_at                                   0\n  235527_at                                   0\n  210750_s_at                                 0\n  206489_s_at                                 0\n  206490_at                                   0\n  1560773_at                                  0\n  228113_at                                   0\n  1553269_at                                  0",
        "\n  1559746_a_at                                0\n  1569479_at                                  0\n  224887_at                                   0\n  1557370_s_at                                0\n  201959_s_at                                 0\n  201960_s_at                                 0\n  238244_at                                   0\n  1561423_at                                  0\n  201913_s_at                                 0\n  220222_at                                   0\n  225578_at                                  -1",
        "\n  235391_at                                   0\n  228011_at                                   1\n  1553940_a_at                                0\n  238897_at                                   0\n  239471_at                                   0\n  227423_at                                   0\n  205865_at                                   0\n  228008_at                                   0\n  207068_at                                   1\n  204857_at                                   0\n  1569729_a_at                                0",
        "\n  218154_at                                   0\n  214194_at                                   0\n  222607_s_at                                 0\n  218362_s_at                                 0\n  234660_s_at                                 0\n  236560_at                                   0\n  222525_s_at                                -1\n  218125_s_at                                 0\n  233979_s_at                                 0\n  223549_s_at                                 0\n  242327_x_at                                 0",
        "\n  200004_at                                   0\n  217607_x_at                                 0\n  1557964_at                                  0\n  213051_at                                   0\n  225634_at                                   0\n  220104_at                                   0\n  220703_at                                   0\n  204279_at                                   0\n  215536_at                                   0\n  202958_at                                   0\n  233226_at                                   0",
        "\n  1555141_a_at                                1\n  1555142_at                                  0\n  1553633_s_at                                0\n  207324_s_at                                 0\n  200871_s_at                                 0\n  200866_s_at                                 0\n  206819_at                                   0\n  222253_s_at                                 0\n  232736_s_at                                -1\n  1553900_s_at                                0\n  206280_at                                   1",
        "\n  240342_at                                   0\n  1553710_at                                  0\n  1553711_a_at                                0\n  234732_s_at                                 0\n  220271_x_at                                 0\n  233839_at                                   0\n  1562815_at                                  0\n  234853_s_at                                 0\n  233600_at                                   0\n  1552713_a_at                                0\n  205592_at                                   0",
        "\n  228372_at                                   0\n  1561890_at                                  0\n  236361_at                                   1\n  228501_at                                   1\n  215559_at                                   0\n  208480_s_at                                 0\n  1561305_at                                  0\n  213104_at                                   0\n  213105_s_at                                 0\n  1555852_at                                  0\n  219727_at                                   0",
        "\n  1553594_a_at                                0\n  214400_at                                   0\n  214572_s_at                                 0\n  200058_s_at                                 0\n  232931_at                                   0\n  214982_at                                   0\n  216247_at                                   0\n  1566671_a_at                                0\n  222492_at                                   0\n  202671_s_at                                 0\n  218018_at                                  -1",
        "\n  218019_s_at                                 0\n  1553556_at                                  0\n  220136_s_at                                 0\n  203371_s_at                                 0\n  226857_at                                   0\n  207438_s_at                                -1\n  204874_x_at                                 0\n  216356_x_at                                 0\n  222652_s_at                                 0\n  222115_x_at                                 0\n  221628_s_at                                 0",
        "\n  227142_at                                   0\n  219961_s_at                                 0\n  228291_s_at                                 0\n  228290_at                                   0\n  231603_at                                   0\n  235423_at                                   0\n  204853_at                                   0\n  1569069_s_at                                0\n  214028_x_at                                 0\n  208089_s_at                                 0\n  214762_at                                   0",
        "\n  239508_x_at                                 0\n  1556969_at                                  0\n  1553886_at                                  0\n  220260_at                                   1\n  222940_at                                   0\n  219934_s_at                                 0\n  219597_s_at                                 0\n  1565795_at                                  0\n  215800_at                                   0\n  209731_at                                   0\n  221783_at                                   0",
        "\n  221785_at                                   0\n  221784_at                                   0\n  52005_at                                    0\n  221849_s_at                                 0\n  91952_at                                    0\n  221851_at                                   0\n  224714_at                                   0\n  224713_at                                   0\n  204787_at                                   0\n  223206_s_at                                 0\n  231271_x_at                                 0",
        "\n  232456_at                                   0\n  235132_at                                   0\n  1557059_at                                  0\n  220411_x_at                                 0\n  213239_at                                   0\n  206842_at                                   0\n  205451_at                                   0\n  234680_at                                   0\n  232353_s_at                                 0\n  230370_x_at                                 0\n  233982_x_at                                 0",
        "\n  218321_x_at                                 0\n  205329_s_at                                 0\n  212652_s_at                                 0\n  226403_at                                   0\n  207798_s_at                                 0\n  201806_s_at                                 0\n  239523_at                                   0\n  238122_at                                   0\n  51228_at                                    0\n  202728_s_at                                 0\n  202729_s_at                                 0",
        "\n  202327_s_at                                 0\n  202328_s_at                                 0\n  240377_at                                   0\n  240376_s_at                                 0\n  214682_at                                   1\n  226686_at                                   0\n  244275_at                                   0\n  226689_at                                   0\n  50314_i_at                                  0\n  218081_at                                   0\n  229460_at                                   0",
        "\n  1558959_at                                  0\n  231874_at                                   0\n  1554178_a_at                                0\n  204116_at                                   0\n  219148_at                                  -1\n  206001_at                                   0\n  214825_at                                   0\n  230869_at                                   0\n  205891_at                                  -1\n  1556187_at                                  0\n  1556188_a_at                                1",
        "\n  239839_at                                   1\n  1553286_at                                  0\n  234859_at                                   0\n  232317_at                                   0\n  228104_at                                   0\n  200966_x_at                                 0\n  214687_x_at                                 0\n  204052_s_at                                 0\n  204051_s_at                                 0\n  1569683_at                                  0\n  214776_x_at                                 0",
        "\n  208318_s_at                                 0\n  223682_s_at                                 0\n  239377_at                                   0\n  222502_s_at                                 0\n  218050_at                                   0\n  204920_at                                   1\n  217564_s_at                                 1\n  215947_s_at                                 0\n  219544_at                                  -1\n  205206_at                                   0\n  227677_at                                   0",
        "\n  207187_at                                   0\n  211108_s_at                                 0\n  211109_at                                   0\n  1554641_a_at                                0\n  235542_at                                   1\n  214754_at                                   1\n  223253_at                                   0\n  1554466_a_at                                0\n  228114_x_at                                 0\n  227378_x_at                                 0\n  231377_at                                   0",
        "\n  220394_at                                   0\n  220470_at                                   0\n  223023_at                                   0\n  236666_s_at                                 1\n  208016_s_at                                 0\n  205357_s_at                                 0\n  228946_at                                   1\n  244056_at                                   0\n  213115_at                                   0\n  200782_at                                  -1\n  220384_at                                   0",
        "\n  205312_at                                   0\n  220048_at                                   0\n  1553043_a_at                                0\n  214252_s_at                                 0\n  236446_at                                   0\n  204085_s_at                                 0\n  204084_s_at                                 0\n  219023_at                                   0\n  242753_x_at                                 0\n  205671_s_at                                 0\n  225878_at                                   0",
        "\n  226968_at                                   0\n  209234_at                                   0\n  227766_at                                   0\n  206235_at                                   1\n  204880_at                                   0\n  209899_s_at                                 0\n  203024_s_at                                 0\n  213036_x_at                                 0\n  213042_s_at                                 0\n  207522_s_at                                 0\n  207521_s_at                                 0",
        "\n  1569781_at                                  0\n  231899_at                                   1\n  211102_s_at                                 0\n  211101_x_at                                 0\n  211100_x_at                                 0\n  207857_at                                   0\n  237340_at                                   0\n  1553051_s_at                                0\n  233795_at                                   0\n  222425_s_at                                 0\n  217806_s_at                                 0",
        "\n  210601_at                                   0\n  210602_s_at                                 0\n  205533_s_at                                 0\n  214803_at                                   1\n  205532_s_at                                 1\n  232631_at                                   0\n  216993_s_at                                 0\n  213870_at                                   0\n  214561_at                                   0\n  237434_x_at                                 0\n  1553169_at                                  0",
        "\n  1553171_x_at                                1\n  219230_at                                   0\n  209477_at                                   0\n  1560939_at                                  0\n  238808_at                                  -1\n  243058_at                                   0\n  238571_at                                   0\n  231786_at                                   0\n  210320_s_at                                 1\n  213637_at                                   0\n  1570415_at                                  0",
        "\n  1562048_at                                  0\n  220753_s_at                                -1\n  244739_at                                   0\n  212398_at                                   0\n  204969_s_at                                 0\n  212397_at                                   0\n  202465_at                                   0\n  215931_s_at                                 0\n  222518_at                                   0\n  218098_at                                   0\n  215561_s_at                                 0",
        "\n  202948_at                                   0\n  222528_s_at                                 0\n  221920_s_at                                 0\n  242335_at                                   0\n  226179_at                                   0\n  222529_at                                   0\n  218136_s_at                                 0\n  231078_at                                  -1\n  201208_s_at                                 0\n  201207_at                                   0\n  210125_s_at                                 0",
        "\n  204692_at                                   0\n  37796_at                                    0\n  234978_at                                   0\n  230874_at                                   0\n  226608_at                                   0\n  242555_at                                   0\n  231452_at                                   0\n  231050_at                                   0\n  228360_at                                   0\n  204670_x_at                                 0\n  209312_x_at                                 0",
        "\n  221157_s_at                                 0\n  223941_at                                   0\n  209653_at                                   1\n  225268_at                                   1\n  213567_at                                   1\n  225267_at                                   1\n  1562121_at                                  0\n  232629_at                                   0\n  1554576_a_at                                0\n  211603_s_at                                 0\n  204591_at                                   0",
        "\n  234583_at                                   0\n  222953_at                                   0\n  218874_s_at                                 1\n  234700_s_at                                 0\n  234699_at                                   0\n  231706_s_at                                 0\n  207914_x_at                                 0\n  228493_at                                   1\n  223439_at                                   0\n  228035_at                                   1\n  228086_at                                   0",
        "\n  219314_s_at                                 0\n  222864_s_at                                 0\n  235500_at                                   0\n  1558594_at                                  0\n  231303_at                                   0\n  211498_s_at                                 0\n  211497_x_at                                 0\n  209706_at                                  -1\n  209160_at                                   1\n  243954_at                                   0\n  214043_at                                   1",
        "\n  213362_at                                   1\n  205712_at                                   1\n  210683_at                                  -1\n  219196_at                                   1\n  242698_at                                   0\n  237281_at                                   0\n  237282_s_at                                 0\n  222596_s_at                                 0\n  218326_s_at                                 0\n  228461_at                                   0\n  1561165_a_at                                0",
        "\n  205042_at                                   0\n  1557602_at                                  0\n  208533_at                                   0\n  237472_at                                   0\n  235310_at                                   0\n  227666_at                                   0\n  241247_at                                   0\n  230615_at                                   0\n  218304_s_at                                 0\n  222586_s_at                                 0\n  238932_at                                   1",
        "\n  240557_at                                   1\n  210954_s_at                                 0\n  204094_s_at                                 0\n  210953_at                                   0\n  218676_s_at                                 0\n  210753_s_at                                 0\n  230425_at                                   0\n  211898_s_at                                 0\n  222017_x_at                                 0\n  90610_at                                    0\n  221956_at                                   0",
        "\n  230185_at                                   0\n  220360_at                                   0\n  228922_at                                   0\n  1560673_at                                  0\n  1569698_s_at                                0\n  209904_at                                  -1\n  204199_at                                   1\n  1555452_at                                  0\n  1554745_at                                  0\n  210552_s_at                                 0\n  205281_s_at                                 0",
        "\n  215969_at                                   0\n  216237_s_at                                 0\n  201755_at                                   0\n  231405_at                                   0\n  201040_at                                   0\n  231140_at                                   0\n  1559785_at                                  0\n  231236_at                                   0\n  206932_at                                   0\n  221100_at                                   0\n  219474_at                                   0",
        "\n  1559021_at                                  0\n  37433_at                                    0\n  214593_at                                   0\n  214442_s_at                                 0\n  235107_at                                   0\n  1556492_a_at                                0\n  1555514_a_at                                0\n  238700_at                                   0\n  243624_at                                   0\n  1555513_at                                  0\n  201591_s_at                                 0",
        "\n  227392_at                                   0\n  218796_at                                   0\n  60474_at                                    0\n  229545_at                                   0\n  1552295_a_at                                0\n  225277_at                                   0\n  31637_s_at                                  0\n  204760_s_at                                 0\n  224614_at                                   1\n  224616_at                                   1\n  203590_at                                   0",
        "\n  223015_at                                  -1\n  202991_at                                   0\n  1556411_s_at                                0\n  1564254_at                                  0\n  1569991_at                                  0\n  1564561_at                                  0\n  1559316_at                                  0\n  213043_s_at                                 0\n  210996_s_at                                 0\n  210317_s_at                                 0\n  1560566_at                                  0",
        "\n  222909_s_at                                 0\n  219624_at                                   0\n  228189_at                                   0\n  232054_at                                   0\n  206453_s_at                                 0\n  214279_s_at                                 0\n  210977_s_at                                 0\n  217478_s_at                                 0\n  207337_at                                   0\n  200945_s_at                                 0\n  210616_s_at                                 0",
        "\n  204548_at                                   0\n  231455_at                                   0\n  220844_at                                   0\n  223828_s_at                                 0\n  1560522_at                                  0\n  211841_s_at                                 0\n  211282_x_at                                 0\n  210847_x_at                                 0\n  219423_x_at                                 0\n  216042_at                                   0\n  228438_at                                   0",
        "\n  1569777_a_at                                0\n  1561969_at                                  0\n  1554234_at                                  0\n  233644_at                                   0\n  207922_s_at                                 0\n  209375_at                                   0\n  218756_s_at                                 0\n  206108_s_at                                 0\n  208804_s_at                                 0\n  203334_at                                   0\n  231184_at                                   0",
        "\n  227079_at                                   0\n  203534_at                                   0\n  220069_at                                   0\n  217590_s_at                                 0\n  208349_at                                   0\n  203932_at                                   0\n  207347_at                                   0\n  230108_at                                   0\n  232287_at                                   0\n  55662_at                                    0\n  218891_at                                   0",
        "\n  1568733_at                                  0\n  243432_at                                   0\n  209517_s_at                                 0\n  202777_at                                   1\n  220362_at                                   0\n  240123_at                                   0\n  219180_s_at                                 0\n  235098_at                                   0\n  206193_s_at                                 0\n  206192_at                                   0\n  232802_at                                   0",
        "\n  220635_at                                   0\n  210541_s_at                                 0\n  212116_at                                   0\n  212118_at                                   0\n  206141_at                                   0\n  205096_at                                   0\n  218982_s_at                                 0\n  204595_s_at                                 0\n  204597_x_at                                 0\n  204596_s_at                                 0\n  208248_x_at                                 0",
        "\n  208702_x_at                                 0\n  211404_s_at                                 0\n  214875_x_at                                 0\n  208704_x_at                                 0\n  208703_s_at                                 0\n  243854_at                                   0\n  242785_at                                   0\n  229656_s_at                                 0\n  217795_s_at                                 0\n  222418_s_at                                 0\n  204050_s_at                                 0",
        "\n  200960_x_at                                 0\n  216295_s_at                                 0\n  1560433_at                                  1\n  1560434_x_at                                1\n  209928_s_at                                 0\n  229310_at                                   0\n  220348_at                                   0\n  1554261_at                                  0\n  1554262_s_at                                0\n  1560201_at                                  0\n  209461_x_at                                 0",
        "\n  211178_s_at                                 0\n  213001_at                                   0\n  219514_at                                   0\n  213004_at                                   0\n  205873_at                                   0\n  213889_at                                   0\n  232262_at                                   0\n  239943_x_at                                 0\n  201816_s_at                                 0\n  227438_at                                   0\n  207133_x_at                                 0",
        "\n  243222_at                                   0\n  213439_x_at                                 1\n  206196_s_at                                 1\n  204008_at                                   1\n  205037_at                                   0\n  213784_at                                   0\n  243812_at                                   0\n  220742_s_at                                 0\n  212144_at                                   0\n  215735_s_at                                 0\n  215624_at                                   0",
        "\n  1562885_at                                  0\n  1552998_at                                  0\n  AFFX-HUMGAPDH/M33197_5_at                  -1\n  212581_x_at                                -1\n  213453_x_at                                -1\n  AFFX-HUMGAPDH/M33197_3_at                  -1\n  AFFX-HUMGAPDH/M33197_M_at                  -1\n  217398_x_at                                -1\n  227057_at                                   0\n  225618_at                                   0\n  1554594_at                                  0",
        "\n  208428_at                                   0\n  204769_s_at                                 0\n  225973_at                                   0\n  204770_at                                   0\n  208714_at                                   0\n  241623_at                                   0\n  213136_at                                  -1\n  213137_s_at                                -1\n  204935_at                                   0\n  214595_at                                   0\n  211053_at                                   0",
        "\n  222691_at                                   0\n  243579_at                                   0\n  1552364_s_at                                0\n  225238_at                                   0\n  225237_s_at                                 0\n  225240_s_at                                 0\n  226134_s_at                                 0\n  225233_at                                   0\n  243010_at                                   0\n  239232_at                                   0\n  1729_at                                     0",
        "\n  205641_s_at                                 0\n  217811_at                                   0\n  225561_at                                   0\n  236363_at                                   0\n  202209_at                                   0\n  227242_s_at                                 0\n  227243_s_at                                 0\n  210399_x_at                                 0\n  211885_x_at                                 0\n  211465_x_at                                 0\n  211882_x_at                                 0",
        "\n  210398_x_at                                 0\n  209449_at                                   0\n  217961_at                                   0\n  200855_at                                   0\n  200857_s_at                                 0\n  200856_x_at                                 0\n  200854_at                                   0\n  243682_at                                   0\n  234313_at                                   0\n  240314_at                                   0\n  219157_at                                   0",
        "\n  240809_at                                   0\n  233952_s_at                                 0\n  225539_at                                   1\n  1553327_a_at                                0\n  227341_at                                   0\n  226117_at                                   0\n  235971_at                                   0\n  238858_at                                   0\n  227291_s_at                                -1\n  230964_at                                  -1\n  229908_s_at                                 0",
        "\n  221064_s_at                                 0\n  235087_at                                   0\n  232891_at                                   0\n  201426_s_at                                -1\n  220468_at                                   0\n  214088_s_at                                 0\n  1554624_a_at                                0\n  210660_at                                   0\n  207872_s_at                                 0\n  201847_at                                   0\n  1561557_at                                  0",
        "\n  236156_at                                   0\n  203031_s_at                                 0\n  1568781_at                                  0\n  232560_at                                   0\n  206742_at                                   1\n  204278_s_at                                 0\n  204274_at                                   0\n  236339_at                                   0\n  228457_at                                   0\n  228108_at                                   1\n  239488_at                                   1",
        "\n  229506_at                                   0\n  238477_at                                   0\n  209244_s_at                                 0\n  210158_at                                   0\n  235215_at                                   1\n  200969_at                                   0\n  200970_s_at                                 0\n  200971_s_at                                 0\n  235475_at                                   0\n  1562313_at                                  0\n  228138_at                                   0",
        "\n  242621_at                                   0\n  232101_s_at                                -1\n  219048_at                                   0\n  233166_at                                   0\n  221414_s_at                                 0\n  1569468_at                                  0\n  235348_at                                   1\n  234993_at                                   0\n  228802_at                                   0\n  221396_at                                   0\n  204697_s_at                                 0",
        "\n  232566_at                                   0\n  218199_s_at                                 0\n  222554_s_at                                 0\n  228076_s_at                                 0\n  220709_at                                   0\n  226589_at                                   0\n  1555790_a_at                                0\n  205429_s_at                                 0\n  1558522_at                                  0\n  213142_x_at                                 0\n  222150_s_at                                 0",
        "\n  205766_at                                   0\n  216119_s_at                                 0\n  56821_at                                    0\n  218727_at                                   0\n  228951_at                                   0\n  222215_at                                   0\n  221695_s_at                                 0\n  227073_at                                   0\n  235011_at                                   0\n  226441_at                                   1\n  226979_at                                   0",
        "\n  237613_at                                   0\n  238458_at                                   1\n  234002_at                                   0\n  205016_at                                   0\n  205015_s_at                                 0\n  211258_s_at                                 0\n  219052_at                                   0\n  225315_at                                  -1\n  219133_at                                   0\n  1553438_at                                  0\n  227795_at                                   0",
        "\n  201845_s_at                                 0\n  242719_at                                   0\n  201844_s_at                                 0\n  201846_s_at                                 0\n  220543_at                                   0\n  218718_at                                   1\n  222719_s_at                                 0\n  223909_s_at                                 0\n  223345_at                                   0\n  223908_at                                  -1\n  1562949_at                                  0",
        "\n  224586_x_at                                 0\n  214512_s_at                                 0\n  212857_x_at                                 0\n  224587_at                                   0\n  221727_at                                   1\n  237784_at                                   0\n  215225_s_at                                 0\n  206190_at                                   0\n  1556742_at                                  0\n  235888_at                                   0\n  235798_at                                   1",
        "\n  240037_at                                   0\n  216607_s_at                                 0\n  202314_at                                   0\n  209678_s_at                                 0\n  209677_at                                   0\n  213518_at                                   0\n  212998_x_at                                 0\n  211656_x_at                                 0\n  231955_s_at                                 0\n  224812_at                                   0\n  239028_at                                   0",
        "\n  227764_at                                   0\n  227763_at                                   0\n  221906_at                                  -1\n  59631_at                                    0\n  204392_at                                   0\n  221398_at                                   0\n  216676_x_at                                 0\n  203153_at                                  -1\n  233343_at                                   0\n  233942_at                                   0\n  1569783_at                                  0",
        "\n  228410_at                                   0\n  229450_at                                   0\n  204747_at                                   0\n  221461_at                                   0\n  205815_at                                   0\n  234280_at                                   0\n  210295_at                                   0\n  227852_at                                   0\n  229323_at                                   0\n  233160_at                                   0\n  216713_at                                   0",
        "\n  229785_at                                   0\n [ reached getOption(\"max.print\") -- omitted 35628 rows ]\nattr(,\"levels\")\n[1] -1  0  1\nattr(,\"labels\")\n[1] \"Down\"   \"NotSig\" \"Up\"    \n",
        "> ",
        "a <- c(s8xs0 = \"shOTX2_8-shOTX2_0\", s16xs8 = \"shOTX2_16-shOTX2_8\", s24xs16 = \"shOTX2_24-shOTX2_16\",",
        "+ ",
        "          s48xs24 = \"shOTX2_48-shOTX2_24\", s96xs48 = \"shOTX2_96-shOTX2_48\")",
        "> ",
        "fit <- limma::lmFit(eset, design)",
        "> ",
        "contrasts <- limma::makeContrasts(a, levels = design)",
        "> ",
        "ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "> ",
        "res.fit <- limma::decideTests(ct.fit, method = \"separate\", adjust.method = \"BH\", p.value = 0.05)",
        "> ",
        "contrasts <- limma::makeContrasts(contrasts = a, levels = design)",
        "> ",
        "ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "> ",
        "res.fit <- limma::decideTests(ct.fit, method = \"separate\", adjust.method = \"BH\", p.value = 0.05)",
        "> ",
        "SH.limma <- data.frame( entrez= ct.fit$genes$entrezgene, symbol = ct.fit$genes$hgnc_symbol,",
        "+ ",
        "                        logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                        degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "> ",
        "View(SH.limma)",
        "> ",
        "View(SH.limma)",
        "> ",
        "ct.fit$genes",
        "             hgnc_symbol entrezgene\n211600_at         MT-ND5       4540\n1553575_at        MT-ND6       4541\n241741_at          CRLS1      54675\n225324_at          CRLS1      54675\n223978_s_at        CRLS1      54675\n208939_at         SEPHS1      22929\n208940_at         SEPHS1      22929\n208941_s_at       SEPHS1      22929\n207601_at        SULT1B1      27284\n237806_s_at     MIR646HG     284757\n1562051_at      MIR646HG     284757\n210152_at         LILRB4      11006\n212589_at          RRAS2      22800\n212590_at   ",
        "       RRAS2      22800\n208456_s_at        RRAS2      22800\n219689_at         SEMA3G      56920\n205972_at        SLC38A3      10991\n209752_at          REG1A       5967\n210642_at           CCIN        881\n208040_s_at       MYBPC3       4607\n228575_at         IL20RB      53833\n225329_at         MCRIP1     348262\n203499_at          EPHA2       1969\n227111_at         ZBTB34     403341\n204022_at           WWP2      11060\n1552737_s_at        WWP2      11060\n210200_at           WWP2      11060\n243787_at           WWP2",
        "      11060\n220480_at          HAND2       9464\n1553743_at      METTL21A     151194\n235177_at       METTL21A     151194\n235931_at       METTL21A     151194\n1562844_at     LINC01115     339822\n205811_at          POLG2      11232\n1564539_at     LINC02026     647323\n203758_at           CTSO       1519\n212502_at            ADO      84890\n212500_at            ADO      84890\n1556619_at        SHISA9     729993\n229978_at         SHISA9     729993\n242543_at          SH2D6     284948\n217681_at          WNT7B       7477",
        "\n238105_x_at        WNT7B       7477\n208493_at         HOXA11       3207\n213823_at         HOXA11       3207\n1557004_at     LINC02028     285389\n237200_at      LINC02028     285389\n207649_at          KRT37       8688\n212020_s_at        MKI67       4288\n212022_s_at        MKI67       4288\n212021_s_at        MKI67       4288\n212023_s_at        MKI67       4288\n215498_s_at       MAP2K3       5606\n215499_at         MAP2K3       5606\n207667_s_at       MAP2K3       5606\n203665_at          HMOX1       3162\n220765_s_at ",
        "       LIMS2      55679\n212875_s_at        C2CD2      25966\n209740_s_at       PNPLA4       8228\n209739_s_at       PNPLA4       8228\n209407_s_at        DEAF1      10522\n203261_at          DCTN6      10671\n230666_at      HOXA11-AS     221883\n239950_at      HOXA11-AS     221883\n1552761_at      SLC16A11     162515\n218544_s_at         RCL1      10171\n222666_s_at         RCL1      10171\n233981_at           RCL1      10171\n206677_at          KRT31       3881\n202150_s_at        NEDD9       4739\n202149_at          NEDD9",
        "       4739\n242861_at          NEDD9       4739\n1569020_at         NEDD9       4739\n1560706_at         NEDD9       4739\n231625_at        SLC22A9     114571\n200824_at          GSTP1       2950\n219577_s_at        ABCA7      10347\n1555404_a_at      DUOXA1      90527\n1554648_a_at      DUOXA1      90527\n207260_at            FEV      54738\n239708_at      HAND2-AS1      79804\n219791_s_at    HAND2-AS1      79804\n236141_at      HAND2-AS1      79804\n240167_at      LINC01085     152742\n221457_s_at        BTNL2      56244",
        "\n203765_at            GCA      25801\n203482_at           SLF2      55719\n203481_at           SLF2      55719\n1553909_x_at        SLF2      55719\n235590_at           SLF2      55719\n211259_s_at         BMP7        655\n209591_s_at         BMP7        655\n209590_at           BMP7        655\n211260_at           BMP7        655\n201486_at           RCN2       5955\n201485_s_at         RCN2       5955\n212132_at         LSM14A      26065\n212131_at         LSM14A      26065\n222099_s_at       LSM14A      26065\n226287_at   ",
        "      CCDC34      91057\n1553666_at        CCDC34      91057\n211063_s_at         NCK1       4690\n219756_s_at        POF1B      79983\n1555383_a_at       POF1B      79983\n1555382_at         POF1B      79983\n232121_at         TRDMT1       1787\n206308_at         TRDMT1       1787\n243504_at         TRDMT1       1787\n214495_at         CACNG2      10369\n200041_s_at       DDX39B       7919\n214859_at          FSTL4      23105\n1564511_a_at       FSTL4      23105\n236853_at          TEX29     121793\n233335_at         ITGA11",
        "      22801\n222899_at         ITGA11      22801\n1554819_a_at      ITGA11      22801\n238983_at          NSUN7      79730\n220194_at          NSUN7      79730\n1554452_a_at      HILPDA      29923\n218507_at         HILPDA      29923\n202594_at       LEPROTL1      23484\n202595_s_at     LEPROTL1      23484\n209026_x_at         TUBB     203068\n212320_at           TUBB     203068\n211714_x_at         TUBB     203068\n201529_s_at         RPA1       6117\n236675_at           RPA1       6117\n201528_at           RPA1       6117",
        "\n231812_x_at         PHAX      51808\n235767_x_at         PHAX      51808\n234405_s_at         PHAX      51808\n244297_at         FAM95C  100289137\n208059_at           CCR8       1237\n218121_at          HMOX2       3163\n218120_s_at        HMOX2       3163\n222276_at        METTL2B      55798\n229499_at         CAPN13      92291\n1552801_at        CAPN13      92291\n221600_s_at        AAMDC      28971\n221599_at          AAMDC      28971\n241066_at         ZNF449     203523\n228968_at         ZNF449     203523\n226474_at   ",
        "       NLRC5      84166\n212664_at         TUBB4A      10382\n1561271_at      CCDC144A       9720\n216045_at       CCDC144A       9720\n202307_s_at         TAP1       6890\n205644_s_at        SNRPG       6637\n206969_at          KRT34       3885\n226817_at           DSC2       1824\n231033_at           DSC2       1824\n204750_s_at         DSC2       1824\n204751_x_at         DSC2       1824\n206509_at            PIP       5304\n214513_s_at        CREB1       1385\n204312_x_at        CREB1       1385\n204313_s_at        CREB1",
        "       1385\n225565_at          CREB1       1385\n225572_at          CREB1       1385\n237289_at          CREB1       1385\n204314_s_at        CREB1       1385\n208881_x_at         IDI1       3422\n204615_x_at         IDI1       3422\n238697_at      SMIM10L2A     399668\n224927_at        PPP1R18  107987457\n211141_s_at        CNOT3       4849\n203239_s_at        CNOT3       4849\n229143_at          CNOT3       4849\n227485_at         INTS6L     203522\n1562634_at     LINC01689  101927869\n207862_at           UPK2       7379",
        "\n204856_at         B3GNT3      10331\n204715_at          PANX1      24145\n237428_at          TEX43     389320\n208894_at        HLA-DRA       3122\n210982_s_at      HLA-DRA       3122\n1553553_at       TAS2R39     259285\n228065_at          BCL9L     283149\n227616_at          BCL9L     283149\n229175_at          SMYD4     114826\n210687_at          CPT1A       1374\n210688_s_at        CPT1A       1374\n203634_s_at        CPT1A       1374\n203633_at          CPT1A       1374\n1552793_at       C8orf31     286122\n227721_at   ",
        "      CPAMD8      27151\n224099_at          KCNH7      90134\n1555316_a_at       KCNH7      90134\n214110_s_at       LSP1P4     645166\n243367_at         LSP1P4     645166\n228158_at         LSP1P4     645166\n242133_s_at       LSP1P4     645166\n1552491_at          IDI2      91734\n204360_s_at        NAGLU       4669\n211091_s_at          NF2       4771\n211092_s_at          NF2       4771\n204991_s_at          NF2       4771\n211017_s_at          NF2       4771\n238618_at            NF2       4771\n218915_at            NF2",
        "       4771\n210767_at            NF2       4771\n217150_s_at          NF2       4771\n203414_at            MMD      23531\n244523_at            MMD      23531\n224678_at        RALGAPB      57148\n221736_at        RALGAPB      57148\n221738_at        RALGAPB      57148\n242233_at        RALGAPB      57148\n1561290_at     LINC01692     339622\n208717_at          OXA1L       5018\n235588_at          ESCO2     157570\n235178_x_at        ESCO2     157570\n1564473_at         ESCO2     157570\n241252_at          ESCO2     157570",
        "\n1557342_a_at  MIRLET7BHG     400931\n238150_at     MIRLET7BHG     400931\n232480_at     MIRLET7BHG     400931\n218238_at         GTPBP4      23560\n228002_at         GTPBP4      23560\n217631_at         GTPBP4      23560\n218239_s_at       GTPBP4      23560\n240420_at        AADACL2     344752\n232018_at          LENG1      79165\n206126_at          CXCR5        643\n216734_s_at        CXCR5        643\n201364_s_at         OAZ2       4947\n201365_at           OAZ2       4947\n201349_at       SLC9A3R1       9368\n1553882_at  ",
        "   LINC00504     201853\n204537_s_at        GABRE       2564\n207787_at         KRT33B       3884\n225169_at          INTS4      92105\n1553670_at         INTS4      92105\n233193_x_at        INTS4      92105\n1569253_at         INTS4      92105\n1569254_s_at       INTS4      92105\n205829_at        HSD17B1       3292\n202060_at           CTR9       9646\n209040_s_at        PSMB8       5696\n203175_at           RHOG        391\n213039_at       ARHGEF18      23370\n239270_at         PLCXD3     345557\n230081_at         PLCXD3",
        "     345557\n209088_s_at         UBN1      29855\n207253_s_at         UBN1      29855\n235608_at          FBXL3      26224\n225132_at          FBXL3      26224\n208291_s_at           TH       7054\n208483_x_at       KRT33A       3883\n210907_s_at       PDCD10      11235\n235396_at         TANGO2     128989\n208820_at           PTK2       5747\n207821_s_at         PTK2       5747\n241387_at           PTK2       5747\n241453_at           PTK2       5747\n235527_at         DLGAP1       9229\n210750_s_at       DLGAP1       9229",
        "\n206489_s_at       DLGAP1       9229\n206490_at         DLGAP1       9229\n1560773_at        DLGAP1       9229\n228113_at          RAB37     326624\n1553269_at        ZNF718     255403\n1559746_a_at      ZNF718     255403\n1569479_at        ZNF718     255403\n224887_at          GNPTG      84572\n1557370_s_at      MYCBP2      23077\n201959_s_at       MYCBP2      23077\n201960_s_at       MYCBP2      23077\n238244_at      LINC00535     642924\n1561423_at     LINC00535     642924\n201913_s_at        COASY      80347\n220222_at   ",
        "  RBM12B-AS1      55472\n225578_at           MZT1     440145\n235391_at         FAM92A     137392\n228011_at         FAM92A     137392\n1553940_a_at      LRRC28     123355\n238897_at         LRRC28     123355\n239471_at         LRRC28     123355\n227423_at         LRRC28     123355\n205865_at         ARID3A       1820\n228008_at         ARID3A       1820\n207068_at          ZFP37       7539\n204857_at         MAD1L1       8379\n1569729_a_at        ASZ1     136991\n218154_at          GSDMD      79792\n214194_at           DIS3",
        "      22894\n222607_s_at         DIS3      22894\n218362_s_at         DIS3      22894\n234660_s_at         DIS3      22894\n236560_at           DIS3      22894\n222525_s_at       CCDC25      55246\n218125_s_at       CCDC25      55246\n233979_s_at         ESPN      83715\n223549_s_at         ESPN      83715\n242327_x_at         ESPN      83715\n200004_at         EIF4G2       1982\n217607_x_at       EIF4G2       1982\n1557964_at        EIF4G2       1982\n213051_at        ZC3HAV1      56829\n225634_at        ZC3HAV1      56829",
        "\n220104_at        ZC3HAV1      56829\n220703_at       IDI2-AS1      55853\n204279_at          PSMB9       5698\n215536_at       HLA-DQB2       3120\n202958_at          PTPN9       5780\n233226_at          PTPN9       5780\n1555141_a_at      SLC9B1     150159\n1555142_at        SLC9B1     150159\n1553633_s_at      SLC9B1     150159\n207324_s_at         DSC1       1823\n200871_s_at         PSAP       5660\n200866_s_at         PSAP       5660\n206819_at      POM121L9P      29774\n222253_s_at    POM121L9P      29774\n232736_s_at ",
        "   POM121L9P      29774\n1553900_s_at   POM121L9P      29774\n206280_at          CDH18       1016\n240342_at         TRIM61     391712\n1553710_at       FAM218A     152756\n1553711_a_at     FAM218A     152756\n234732_s_at       EFCAB6      64800\n220271_x_at       EFCAB6      64800\n233839_at         EFCAB6      64800\n1562815_at        EFCAB6      64800\n234853_s_at       EFCAB6      64800\n233600_at         EFCAB6      64800\n1552713_a_at      SLC4A1       6521\n205592_at         SLC4A1       6521\n228372_at        TMEM273",
        "     170371\n1561890_at       TMEM273     170371\n236361_at        GALNT15     117248\n228501_at        GALNT15     117248\n215559_at          ABCC6        368\n208480_s_at        ABCC6        368\n1561305_at     LINC02355  101927849\n213104_at           TSR3     115939\n213105_s_at         TSR3     115939\n1555852_at     PSMB8-AS1  100507463\n219727_at          DUOX2      50506\n1553594_a_at       INSL3       3640\n214400_at          INSL3       3640\n214572_s_at        INSL3       3640\n200058_s_at     SNRNP200      23020",
        "\n232931_at       SNRNP200      23020\n214982_at       SNRNP200      23020\n216247_at          RPS20       6224\n1566671_a_at        PDXK  105372824\n222492_at           PDXK  105372824\n202671_s_at         PDXK  105372824\n218018_at           PDXK  105372824\n218019_s_at         PDXK  105372824\n1553556_at       TAS2R40     259286\n220136_s_at       CRYBA2       1412\n203371_s_at       NDUFB3       4709\n226857_at       ARHGEF19     128272\n207438_s_at        SNUPN      10073\n204874_x_at       BAIAP3       8938\n216356_x_at ",
        "      BAIAP3       8938\n222652_s_at        GLYR1      84656\n222115_x_at        GLYR1      84656\n221628_s_at        GLYR1      84656\n227142_at        PLEKHG5      57449\n219961_s_at          KIZ      55857\n228291_s_at          KIZ      55857\n228290_at            KIZ      55857\n231603_at        RNASE11     122651\n235423_at           ORC2       4999\n204853_at           ORC2       4999\n1569069_s_at       TDRD3      81550\n214028_x_at        TDRD3      81550\n208089_s_at        TDRD3      81550\n214762_at       ATP6V1G2",
        "        534\n239508_x_at       CFAP65     255101\n1556969_at        CFAP65     255101\n1553886_at        CFAP65     255101\n220260_at        TBC1D19      55296\n222940_at        SULT1E1       6783\n219934_s_at      SULT1E1       6783\n219597_s_at        DUOX1      53905\n1565795_at         DUOX1      53905\n215800_at          DUOX1      53905\n209731_at          NTHL1       4913\n221783_at            WIZ      58525\n221785_at            WIZ      58525\n221784_at            WIZ      58525\n52005_at             WIZ      58525",
        "\n221849_s_at       DCAF15      90379\n91952_at          DCAF15      90379\n221851_at         DCAF15      90379\n224714_at           NIFK      84365\n224713_at           NIFK      84365\n204787_at          VSIG4      11326\n223206_s_at       NMRAL1      57407\n231271_x_at       NMRAL1      57407\n232456_at       C10orf71     118461\n235132_at       NIFK-AS1     254128\n1557059_at      NIFK-AS1     254128\n220411_x_at       PODNL1      79883\n213239_at          PIBF1      10464\n206842_at          KCND1       3750\n205451_at   ",
        "       FOXO4       4303\n234680_at      KRTAP17-1      83902\n232353_s_at       STYXL1      51657\n230370_x_at       STYXL1      51657\n233982_x_at       STYXL1      51657\n218321_x_at       STYXL1      51657\n205329_s_at         SNX4       8723\n212652_s_at         SNX4       8723\n226403_at           TMC4     147798\n207798_s_at       ATXN2L      11273\n201806_s_at       ATXN2L      11273\n239523_at         TRARG1     286753\n238122_at         RBM12B     389677\n51228_at          RBM12B     389677\n202728_s_at        LTBP1",
        "       4052\n202729_s_at        LTBP1       4052\n202327_s_at         PKD1       5310\n202328_s_at         PKD1       5310\n240377_at           PKD1       5310\n240376_s_at         PKD1       5310\n214682_at           PKD1       5310\n226686_at          CISD2     493856\n244275_at          CISD2     493856\n226689_at          CISD2     493856\n50314_i_at      C20orf27      54976\n218081_at       C20orf27      54976\n229460_at        FAM126B     285172\n1558959_at       FAM126B     285172\n231874_at        FAM126B     285172",
        "\n1554178_a_at     FAM126B     285172\n204116_at          IL2RG       3561\n219148_at            PBK      55872\n206001_at            NPY       4852\n214825_at        FAM155A     728215\n230869_at        FAM155A     728215\n205891_at        ADORA2B        136\n1556187_at        ZNF555     148254\n1556188_a_at      ZNF555     148254\n239839_at         ZNF555     148254\n1553286_at        ZNF555     148254\n234859_at         PLXNA4      91584\n232317_at         PLXNA4      91584\n228104_at         PLXNA4      91584\n200966_x_at ",
        "       ALDOA        226\n214687_x_at        ALDOA        226\n204052_s_at        SFRP4       6424\n204051_s_at        SFRP4       6424\n1569683_at          XYLB       9942\n214776_x_at         XYLB       9942\n208318_s_at         XYLB       9942\n223682_s_at       EIF1AD      84285\n239377_at         EIF1AD      84285\n222502_s_at         UFM1      51569\n218050_at           UFM1      51569\n204920_at           CPS1       1373\n217564_s_at         CPS1       1373\n215947_s_at      FAM136A      84908\n219544_at           BORA",
        "      79866\n205206_at          ANOS1       3730\n227677_at           JAK3       3718\n207187_at           JAK3       3718\n211108_s_at         JAK3       3718\n211109_at           JAK3       3718\n1554641_a_at        TET3     200424\n235542_at           TET3     200424\n214754_at           TET3     200424\n223253_at          EPDR1      54749\n1554466_a_at     METTL26      84326\n228114_x_at      METTL26      84326\n227378_x_at      METTL26      84326\n231377_at        CXorf65     158830\n220394_at          FGF20      26281",
        "\n220470_at          BET1L      51272\n223023_at          BET1L      51272\n236666_s_at      LRRC10B     390205\n208016_s_at        AGTR1        185\n205357_s_at        AGTR1        185\n228946_at           INTU      27152\n244056_at          SFTA2     389376\n213115_at          ATG4A     115201\n200782_at          ANXA5        308\n220384_at           NME8      51314\n205312_at           SPI1       6688\n220048_at           EDAR      10913\n1553043_a_at     CD300LF     146722\n214252_s_at         CLN5       1203\n236446_at   ",
        "        CLN5       1203\n204085_s_at         CLN5       1203\n204084_s_at         CLN5       1203\n219023_at          AP1AR      55435\n242753_x_at        AP1AR      55435\n205671_s_at      HLA-DOB       3112\n225878_at          KIF1B      23095\n226968_at          KIF1B      23095\n209234_at          KIF1B      23095\n227766_at           LIG4       3981\n206235_at           LIG4       3981\n204880_at           MGMT       4255\n209899_s_at        PUF60      22827\n203024_s_at      C5orf15      56951\n [ reached 'max' / getOption(\"max.print\") -- omitted",
        " 36128 rows ]\n",
        "> ",
        "SH.limma <- data.frame(logFC = ct.fit$coef, p.value = ct.fit$p.value, ct.fit$genes, ",
        "+ ",
        "                        degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "> ",
        "View(SH.limma)",
        "> ",
        "SH.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                        degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "> ",
        "View(SH.limma)",
        "> ",
        "View(feature_data)",
        "> ",
        "names(b)",
        "NULL\n",
        "> ",
        "diff_exp <- function(eset, contrasts, method, adjust.method, p.value = 0.05, degenes_only=FALSE, ...) {",
        "+ ",
        "  ",
        "+ ",
        "  temp <- as.factor(pData(eset)[, group])",
        "+ ",
        "  design <- model.matrix(~0 + temp)",
        "+ ",
        "  cols <- colnames(design)",
        "+ ",
        "  colnames(design) <- gsub(\"temp\", \"\", cols)",
        "+ ",
        "  fit <- limma::lmFit(eset, design)",
        "+ ",
        "  contrasts <- limma::makeContrasts(contrasts = contrasts, levels = design)",
        "+ ",
        "  ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "+ ",
        "  res.fit <- limma::decideTests(ct.fit, method = method, adjust.method = adjust.method, p.value = p.value)",
        "+ ",
        "  sh.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                         degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  if(degenes_only) {",
        "+ ",
        "    features <- rowSums(res.fit! = 0) > 0",
        "Erro: '!' inesperado in:\n\"  if(degenes_only) {\n    features <- rowSums(res.fit!\"\n",
        "> ",
        "    features <- names(features)[features]",
        "Erro: objeto 'features' não encontrado\n",
        "> ",
        "    de.limma <- sh.limma[features, ]",
        "Erro: objeto 'sh.limma' não encontrado\n",
        "> ",
        "    de.limma <- de.limma[complete.cases(de.limma), ]",
        "Erro: objeto 'de.limma' não encontrado\n",
        "> ",
        "  }",
        "Erro: '}' inesperado in \"  }\"\n",
        "> ",
        "  ",
        "> ",
        "}",
        "Erro: '}' inesperado in \"}\"\n",
        "> ",
        "diff_exp <- function(eset, contrasts, method, adjust.method, p.value = 0.05, degenes_only=FALSE, ...) {",
        "+ ",
        "  ",
        "+ ",
        "  temp <- as.factor(pData(eset)[, group])",
        "+ ",
        "  design <- model.matrix(~0 + temp)",
        "+ ",
        "  cols <- colnames(design)",
        "+ ",
        "  colnames(design) <- gsub(\"temp\", \"\", cols)",
        "+ ",
        "  fit <- limma::lmFit(eset, design)",
        "+ ",
        "  contrasts <- limma::makeContrasts(contrasts = contrasts, levels = design)",
        "+ ",
        "  ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "+ ",
        "  res.fit <- limma::decideTests(ct.fit, method = method, adjust.method = adjust.method, p.value = p.value)",
        "+ ",
        "  sh.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                         degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  if (degenes_only) {",
        "+ ",
        "    features <- rowSums(res.fit != 0) > 0",
        "+ ",
        "    features <- names(features)[features]",
        "+ ",
        "    de.limma <- sh.limma[features, ]",
        "+ ",
        "    de.limma <- de.limma[complete.cases(de.limma), ]",
        "+ ",
        "  }",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "diff_exp(eset, a, method = \"global\", adjust.method = \"BH\")",
        "> ",
        "diff_exp <- function(eset, contrasts, method, adjust.method, p.value = 0.05, degenes_only=FALSE, ...) {",
        "+ ",
        "  ",
        "+ ",
        "  temp <- as.factor(pData(eset)[, group])",
        "+ ",
        "  design <- model.matrix(~0 + temp)",
        "+ ",
        "  cols <- colnames(design)",
        "+ ",
        "  colnames(design) <- gsub(\"temp\", \"\", cols)",
        "+ ",
        "  fit <- limma::lmFit(eset, design)",
        "+ ",
        "  contrasts <- limma::makeContrasts(contrasts = contrasts, levels = design)",
        "+ ",
        "  ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "+ ",
        "  res.fit <- limma::decideTests(ct.fit, method = method, adjust.method = adjust.method, p.value = p.value)",
        "+ ",
        "  sh.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                         degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  if (degenes_only) {",
        "+ ",
        "    features <- rowSums(res.fit != 0) > 0",
        "+ ",
        "    features <- names(features)[features]",
        "+ ",
        "    de.limma <- sh.limma[features, ]",
        "+ ",
        "    de.limma <- de.limma[complete.cases(de.limma), ]",
        "+ ",
        "    return(de.limma)",
        "+ ",
        "  } else {",
        "+ ",
        "    return(sh.limma)",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "shlimma <- diff_exp(eset, a, method = \"global\", adjust.method = \"BH\")",
        "> ",
        "View(shlimma)",
        "> ",
        "shlimma <- diff_exp(eset, a, method = \"global\", adjust.method = \"BH\", degenes_only = T)",
        "> ",
        "View(shlimma)",
        "> ",
        "diff_exp <- function(eset, contrasts, method, adjust.method, p.value = 0.05, degenes_only = FALSE, ...) {",
        "+ ",
        "  ",
        "+ ",
        "  temp <- as.factor(pData(eset)[, group])",
        "+ ",
        "  design <- model.matrix(~0 + temp)",
        "+ ",
        "  cols <- colnames(design)",
        "+ ",
        "  colnames(design) <- gsub(\"temp\", \"\", cols)",
        "+ ",
        "  fit <- limma::lmFit(eset, design)",
        "+ ",
        "  contrasts <- limma::makeContrasts(contrasts = contrasts, levels = design)",
        "+ ",
        "  ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "+ ",
        "  res.fit <- limma::decideTests(ct.fit, method = method, adjust.method = adjust.method, p.value = p.value)",
        "+ ",
        "  sh.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                         degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  if (degenes_only) {",
        "+ ",
        "    features <- rowSums(res.fit != 0) > 0",
        "+ ",
        "    features <- names(features)[features]",
        "+ ",
        "    de.limma <- sh.limma[features, ]",
        "+ ",
        "    de.limma <- de.limma[complete.cases(de.limma), ]",
        "+ ",
        "    return(de.limma)",
        "+ ",
        "  } else {",
        "+ ",
        "    return(sh.limma)",
        "+ ",
        "  }",
        "+ ",
        "}",
        "> ",
        "diff_exp <- function(eset, contrasts, method, adjust.method, p.value = 0.05, degenes_only = FALSE, ...) {",
        "+ ",
        "  ",
        "+ ",
        "  temp <- as.factor(pData(eset)[, group])",
        "+ ",
        "  design <- model.matrix(~0 + temp)",
        "+ ",
        "  cols <- colnames(design)",
        "+ ",
        "  colnames(design) <- gsub(\"temp\", \"\", cols)",
        "+ ",
        "  fit <- limma::lmFit(eset, design)",
        "+ ",
        "  contrasts <- limma::makeContrasts(contrasts = contrasts, levels = design)",
        "+ ",
        "  ct.fit <- limma::eBayes(limma::contrasts.fit(fit, contrasts))",
        "+ ",
        "  res.fit <- limma::decideTests(ct.fit, method = method, adjust.method = adjust.method, p.value = p.value)",
        "+ ",
        "  sh.limma <- data.frame(ct.fit$genes, logFC = ct.fit$coef, p.value = ct.fit$p.value, ",
        "+ ",
        "                         degenes = unclass(res.fit), stringsAsFactors = FALSE)",
        "+ ",
        "  ",
        "+ ",
        "  if (degenes_only) {",
        "+ ",
        "    features <- rowSums(res.fit != 0) > 0",
        "+ ",
        "    features <- names(features)[features]",
        "+ ",
        "    de.limma <- sh.limma[features, ]",
        "+ ",
        "    de.limma <- de.limma[complete.cases(de.limma), ]",
        "+ ",
        "    return(de.limma)",
        "+ ",
        "  } else {",
        "+ ",
        "    return(sh.limma)",
        "+ ",
        "  }",
        "+ ",
        "}",
        "\nRestarting R session...\n\n",
        "Loading required package: limma\n",
        "\nAttaching package: ‘limma’\n\n",
        "The following object is masked from ‘package:BiocGenerics’:\n\n    plotMA\n\n",
        "> ",
        "library(MicroarrayMethods)",
        "\nAttaching package: ‘MicroarrayMethods’\n\n",
        "The following object is masked _by_ ‘.GlobalEnv’:\n\n    set_fdata\n\n",
        "> ",
        "a",
        "                s8xs0                s16xs8               s24xs16               s48xs24               s96xs48 \n  \"shOTX2_8-shOTX2_0\"  \"shOTX2_16-shOTX2_8\" \"shOTX2_24-shOTX2_16\" \"shOTX2_48-shOTX2_24\" \"shOTX2_96-shOTX2_48\" \n",
        "> ",
        "contrasts <- c(s8xs0 = \"shOTX2_8-shOTX2_0\", s16xs8 = \"shOTX2_16-shOTX2_8\", s24xs16 = \"shOTX2_24-shOTX2_16\",",
        "+ ",
        "               s48xs24 = \"shOTX2_48-shOTX2_24\", s96xs48 = \"shOTX2_96-shOTX2_48\")",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", degenes_only = T)",
        "> ",
        "View(delimma)",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", p.value = 0.001, degenes_only = T)",
        "> ",
        "View(delimma)",
        "> ",
        "# Set annotation in to eset and remove promiscuous probes and dual notations",
        "> ",
        "eset <- set_fdata(eset, feature_data,",
        "+ ",
        "                  probe_col = platform,",
        "+ ",
        "                  ref_col = ref_col,",
        "+ ",
        "                  rm_probes = TRUE)",
        "9.8% of probes mapping to different hgnc_symbol were removed. Also, 251 duplicated probes in feature data were removed.\n",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", p.value = 0.001, degenes_only = T)",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", p.value = 0.01, degenes_only = T)",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", p.value = 0.05, degenes_only = T)",
        "> ",
        "# Differential expression",
        "> ",
        "delimma <- diff_exp(eset, contrasts, method = \"global\", adjust.method = \"BH\", p.value = 0.001, degenes_only = T)",
        "\nRestarting R session...\n\n"
    ],
    "type" : [
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ]
}